name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  analyze-backend:
    runs-on: ubuntu-latest
    stage: analyze
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install backend dependencies
        run: |
          cd backend
          npm install
        working-directory: backend

      - name: Lint backend code
        run: |
          cd backend
          # Run ESLint excluding dist directory
          eslint . --ignore-pattern 'backend/dist/*'
        working-directory: backend

  test-backend:
    runs-on: ubuntu-latest
    stage: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install backend dependencies
        run: |
          cd backend
          npm install
        working-directory: backend

      - name: Run backend unit tests
        run: |
          cd backend
          # Run tests excluding dist directory if applicable
          npm test
        working-directory: backend

  test-frontend:
    runs-on: ubuntu-latest
    stage: test
    needs: test-backend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install frontend dependencies and Cypress
        run: |
          cd frontend
          npm install
          npm install cypress

      - name: Build frontend (if required)
        run: |
          cd frontend
          npm run build

      - name: Run Cypress tests in frontend
        run: |
          cd frontend
          npm run cypress:run
        env:
          CYPRESS_baseUrl: http://localhost:5173
        continue-on-error: true

      - name: Exclude dist directory from frontend test results
        if: always()
        run: |
          echo "##[add-matcher]dist-report.json"
          echo '{"pattern": "dist/**/*", "severity": "error", "message": "Excluded from test results"}' > dist-report.json

      - name: Upload frontend test results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: frontend-test-results
          path: |
            dist-report.json
